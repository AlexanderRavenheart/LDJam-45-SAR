[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/Objects/asteroids.png" type="Texture" id=1]
[ext_resource path="res://Systems/Offense/TakesDamage.tscn" type="PackedScene" id=2]
[ext_resource path="res://Systems/LevelWarp.tscn" type="PackedScene" id=3]

[sub_resource type="PhysicsMaterial" id=1]
friction = 0.8
bounce = 0.3

[sub_resource type="GDScript" id=2]
script/source = "extends RigidBody2D

var max_starting_speed := 150
var move_direction := Vector2()
var force := Vector2()

var asteroid_resource = load(\"res://Objects/Asteroid.tscn\")
var asteroid_explosion = load(\"res://Objects/AsteroidExposion.tscn\")
var scrap_resource = load(\"res://Objects/Scrap.tscn\")

var current_hp := 20
var iteration := 1
var max_iterations := 3
var damage: int = 15

func _ready():
	init_graphics()
	# random moving direction
	move_direction = Vector2(rand_range(-1, 1), rand_range(-1, 1)).rotated(rotation)
	var initial_impulse = rand_range(-max_starting_speed, max_starting_speed)
	
	# give a minimum limit to initial impulse
	if initial_impulse > -50 and initial_impulse < 50:
		if initial_impulse < 0:
			initial_impulse = -50
		else:
			initial_impulse = 50
	force = move_direction * initial_impulse
	apply_central_impulse(force)
	
	# apply an initial rotation speed
	angular_velocity = rand_range(-2.5, 2.5)
	
	# resize the asteroid based on which iteration it is
	if iteration <= 1:
		iteration = 1
	var scale_vector = Vector2(1.0/iteration, 1.0/iteration)
	$Sprite.apply_scale(scale_vector)
	$CollisionShape2D.apply_scale(scale_vector)

func _integrate_forces(state):
	if $LevelWarp:
		$LevelWarp._integrate_forces(state)
	
	# limit the rotation speed
	angular_velocity = clamp(angular_velocity, -5, 5)

func _physics_process(delta):
	var collisions = get_colliding_bodies()
	var coll_numbers = collisions.size()
	var player_collision = collisions.count(KinematicBody2D)
	if coll_numbers > 0:
		for col in collisions:
			if col is KinematicBody2D:
				col.doDamage(self)

func _exit_tree():
	if iteration == 1:
		var level = get_parent().get_parent()
		if level:
			level.number_of_asteroids -= 1
		
	if iteration < max_iterations:
		var parent = get_parent()
		
		# spawn explosion
		var explosion = asteroid_explosion.instance() as Node2D
		explosion.global_position = global_position
		var part = explosion.get_node(\"Particles\") as CPUParticles2D
		part.amount = 8 / iteration
		part.scale_amount = 0.5 / iteration
		print('explosion at: ', global_position)
		parent.add_child(explosion)
		
		# Here we can spawn scrap
		var chance = (randi() % 100) > 30
		print('scrap roll: ', chance)
		if chance:
			var scrap = scrap_resource.instance() as Area2D
			scrap.global_position = global_position
			scrap.scrap_value = int(rand_range(1, 3))
			parent.add_child(scrap)
		
		for i in range(2):
			var direction_vector = Vector2(cos(rotation), sin(rotation))
			var local_damage_direction = $TakesDamage.last_damage_direction + direction_vector
			var asteroid = asteroid_resource.instance() as RigidBody2D
			var new_pos = position + local_damage_direction
			asteroid.iteration = iteration + 1
			var dir = 1
			if i > 0:
				dir = -1
			asteroid.apply_central_impulse(local_damage_direction.rotated(deg2rad(dir * 90)) * 50 * 0.3/(iteration))
			asteroid.position = new_pos
			parent.add_child(asteroid)

func init_graphics()->void:
	var frames = $Sprite.texture.get_width() / 32
	$Sprite.hframes = frames
	$Sprite.frame = int(rand_range(0, frames))
"

[sub_resource type="CircleShape2D" id=3]
radius = 12.6016

[node name="Asteroid" type="RigidBody2D"]
collision_layer = 4
collision_mask = 7
physics_material_override = SubResource( 1 )
gravity_scale = 0.0
continuous_cd = 2
contacts_reported = 1
contact_monitor = true
sleeping = true
linear_damp = 0.0
angular_damp = 0.0
script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )
hframes = 7

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 3 )

[node name="TakesDamage" parent="." instance=ExtResource( 2 )]

[node name="LevelWarp" parent="." instance=ExtResource( 3 )]
