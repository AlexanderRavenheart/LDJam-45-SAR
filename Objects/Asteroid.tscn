[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/Objects/asteroid1.png" type="Texture" id=1]
[ext_resource path="res://Systems/Offense/TakesDamage.tscn" type="PackedScene" id=2]
[ext_resource path="res://Systems/LevelWarp.tscn" type="PackedScene" id=3]

[sub_resource type="PhysicsMaterial" id=1]
friction = 0.8
bounce = 0.3

[sub_resource type="GDScript" id=2]
script/source = "extends RigidBody2D

var max_starting_speed := 150
var move_direction := Vector2()
var force := Vector2()

var asteroid_resource = load(\"res://Objects/Asteroid.tscn\")

var current_hp := 20
var iteration := 1
var max_iterations := 3

func _ready():
	# random moving direction
	move_direction = Vector2(rand_range(-1, 1), rand_range(-1, 1)).rotated(rotation)
	var initial_impulse = rand_range(-max_starting_speed, max_starting_speed)
	
	# give a minimum limit to initial impulse
	if initial_impulse > -50 and initial_impulse < 50:
		if initial_impulse < 0:
			initial_impulse = -50
		else:
			initial_impulse = 50
	force = move_direction * initial_impulse
	apply_central_impulse(force)
	
	# apply an initial rotation speed
	angular_velocity = rand_range(-2.5, 2.5)
	
	# resize the asteroid based on which iteration it is
	if iteration <= 1:
		iteration = 1
	var scale_vector = Vector2(1.0/iteration, 1.0/iteration)
	$Sprite.apply_scale(scale_vector)
	$CollisionShape2D.apply_scale(scale_vector)

func _integrate_forces(state):
	if $LevelWarp:
		$LevelWarp._integrate_forces(state)
	
	# limit the rotation speed
	angular_velocity = clamp(angular_velocity, -5, 5)

func _exit_tree():
	if iteration < max_iterations:
		var parent = get_parent()
		# Here we can spawn scrap
		for i in range(2):
			var direction_vector = Vector2(cos(rotation), sin(rotation))
			var local_damage_direction = $TakesDamage.last_damage_direction + direction_vector
			var asteroid = asteroid_resource.instance() as RigidBody2D
			var new_pos = position + local_damage_direction * 32 * scale
			asteroid.iteration = iteration + 1
			var dir = 1
			if i > 0:
				dir = -1
			asteroid.apply_central_impulse(local_damage_direction.rotated(deg2rad(dir * 90)) * 50 * 0.3/(iteration))
			asteroid.position = new_pos
			parent.add_child(asteroid)
"

[sub_resource type="CircleShape2D" id=3]
radius = 12.6016

[node name="Asteroid" type="RigidBody2D"]
collision_layer = 4
collision_mask = 7
physics_material_override = SubResource( 1 )
gravity_scale = 0.0
continuous_cd = 2
contact_monitor = true
sleeping = true
linear_damp = 0.0
angular_damp = 0.0
script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 3 )

[node name="TakesDamage" parent="." instance=ExtResource( 2 )]

[node name="LevelWarp" parent="." instance=ExtResource( 3 )]
