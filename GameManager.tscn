[gd_scene load_steps=6 format=2]

[ext_resource path="res://Main Menu.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/Audio/movement-proposition-by-kevin-macleod.ogg" type="AudioStream" id=2]
[ext_resource path="res://Assets/winVictory.png" type="Texture" id=3]
[ext_resource path="res://Assets/loseGameOver.png" type="Texture" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

var scrap_count: int
var time_elapsed : int
var start_time
var count_time: bool
var start_position : Vector2

var level
var player
var hud
var title = \"Void Drifter v0.1\"
var level_format = \"res://Levels/Level%d.tscn\"
var credits
var menu

# Called when the node enters the scene tree for the first time.
func _ready():
	scrap_count = 0
	time_elapsed = 0
	count_time = false
	start_position = get_viewport().get_visible_rect().size / 2
	menu = $MainMenu
	$MainMenu.connect(\"quit_game\", self, \"_on_quit_game\")
	$MainMenu.connect(\"new_game\", self, \"_on_new_game\")
	$MainMenu.connect(\"show_credits\", self, \"_on_show_credits\")

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if OS.is_debug_build():
		OS.set_window_title(title + \" | fps: \" + str(Engine.get_frames_per_second()))
	if count_time:
		$HUD._on_time_elapsed( OS.get_ticks_msec() - start_time)

func _on_show_credits():
	remove_menu()
	var credits_resource = load(\"res://Credits.tscn\")
	credits = credits_resource.instance()
	add_child(credits)
	credits.connect(\"show_menu\", self, \"_on_show_menu\")

func _on_show_menu():
	remove_child(credits)
	credits.call_deferred(\"free\")
	load_menu()

func _on_quit_game():
	get_tree().quit()

func load_menu():
	var menu_resource = load(\"res://Main Menu.tscn\")
	menu = menu_resource.instance()
	add_child(menu)
	menu.connect(\"quit_game\", self, \"_on_quit_game\")
	menu.connect(\"new_game\", self, \"_on_new_game\")
	menu.connect(\"show_credits\", self, \"_on_show_credits\")

func remove_menu():
	# Remove main menu
	remove_child(menu)
	menu.call_deferred(\"free\")

func load_cinematic():
	var cinematic_resource = load(\"res://Cinematic.tscn\")
	level = cinematic_resource.instance()
	add_child(level)
	level.connect(\"cinematic_done\", self, \"unload_cinematic\")

func unload_cinematic():
	remove_child(level)
	level.call_deferred(\"free\")
	load_level(2)	

func load_player():
	# Load Player
	var player_resource = load(\"res://Player/Player.tscn\")
	player = player_resource.instance()
	player.position = start_position
	add_child(player)
	print(\"Player Loaded\")

func load_hud():
	# Load HUD
	var hud_resource = load(\"res://Player/HUD.tscn\")
	hud = hud_resource.instance()
	add_child(hud)
	hud.set_max_scrap_ammount(level.scrap_amount)
	print(\"HUD Loaded\")
	start_time = OS.get_ticks_msec()
	count_time = true

func load_level(level_nr):
	print(\"Load level %d\" % level_nr)
	# Load Level
	var level_resource = load(level_format % level_nr)
	level = level_resource.instance()
	add_child(level)
	
	load_player()
	load_hud()
	
	connect_player_signals()
	$InGameMusic.play()

func _on_new_game():
	remove_menu()
	load_cinematic()
	
func connect_player_signals():
	player.connect(\"armor_changed\", hud, \"_on_Player_armor_changed\")
	player.connect(\"shield_changed\", hud, \"_on_Player_shield_changed\")
	player.connect(\"armor_changed\", self, \"_on_player_armor_changed\")

func _on_player_armor_changed(value):
	if value <= 0:
		# yield(player, \"player_destroyed\")
		$Lose.visible = true

func _on_level_complete():
	$Win.visible = true

func increase_scrap_count(value):
	scrap_count += value
	$HUD._on_progress_increased(scrap_count)
	check_if_level_is_complete()
	
func check_if_level_is_complete():
	if scrap_count >= $Level.scrap_amount:
		_on_level_complete()"

[node name="GameManager" type="Node"]
script = SubResource( 1 )

[node name="MainMenu" parent="." instance=ExtResource( 1 )]

[node name="InGameMusic" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
bus = "Music"

[node name="Win" type="Sprite" parent="."]
visible = false
position = Vector2( 480, 100 )
texture = ExtResource( 3 )

[node name="Lose" type="Sprite" parent="."]
visible = false
position = Vector2( 480, 100 )
texture = ExtResource( 4 )
